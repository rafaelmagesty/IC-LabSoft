commit_hash,author,message,file_path,commit_url,removed_lines,added_lines
effd7f4f23f70679febab995b126a556882362fc,David Fahlander,"Preparing for ES6-ify plugins - ES6-ified the unit tests.

* Rewrote build- and watch scripts to be more generic for use from plugins.
* Using babel-node to execute npm run build.",build\build-utils.js,https://github.com/dexie/Dexie.js/commit/effd7f4f23f70679febab995b126a556882362fc,"return new Promise((resolve, reject) => {
return readFile(source).then(content => new Promise((resolve, reject) =>
)).then(gzipped => writeFile(destination, gzipped));
return new Promise((resolve, reject) =>
return new Promise((resolve, reject) =>
.then(content => replace(content, replacements))
.then(replacedContent => writeFile(filename, replacedContent));
.then(onTimeout);
.then(() =>rollup.rollup({ entry: ""tmp/Dexie.js"" }))
.then(bundle =>bundle.write({
.then(() => replaceInFile(""dist/dexie.js"", varsToReplace))
.then(() => replaceInFile(""dist/dexie.es6.js"", varsToReplace));
.then(() => {","export async function build (optionsList, replacements) {
let files = flatten(await Promise.all(options.dirs.map(dir => readdir(dir))));
let files = flatten(await Promise.all(options.dirs.map(dir => readdir(dir))));
await makeBundle(bundleInfo, replacements);
async function makeBundle (bundleInfo, replacements) {
async function rollupAndMinify(rollupInfo) {
async function rollupAndMinify(rollupInfo) {
await writeFile(rollupInfo.min.file, result.code);
watch(options.dirs, throttle(50, async function (calls) {
watch(options.dirs, throttle(50, async function (calls) {
let anythingRebuilt = await rebuildFiles(options, {
export async function gzip(source, destination) {
export async function gzip(source, destination) {"
68b6ee3dc3bab5cb6d376c094074e9db53ddc842,David Fahlander,"Works on Chrome 55 beta now!
Must remove debugger, console.log and make sure eslint works though. Also need to cleanup the code.",test\tests-asyncawait.js,https://github.com/dexie/Dexie.js/commit/68b6ee3dc3bab5cb6d376c094074e9db53ddc842,return NativePromise.resolve().then(()=> {,"await Promise.all([subFunc(11), subFunc(12), subFunc(13)]);"
5bf23af41c25a31599a0016309b118c9b062e7cf,Christopher Hunt,"Upgrade QUnit (#384)

* Update QUnit. Fixes #381.

Also changed the paths in karma.conf and run-unit-tests to point to the
version which will be downloaded via npm.

* Upgrade tests to avoid hanging on asyncawait.

Also added the options that were previously in qunit to
QUnit.config.urlConfig. This should address the comments in #381.",test\dexie-unittest-utils.js,https://github.com/dexie/Dexie.js/commit/5bf23af41c25a31599a0016309b118c9b062e7cf,"asyncTest(name, num, ()=>Promise.resolve().then(asyncFunction)
.then(start));","let done = assert.async();
let done = assert.async();"
92542c7e420a126e1a244d2c59482b1fe814dee4,David Fahlander,Bugfix: some YJS updates were never sent to server,addons\dexie-cloud\src\yjs\createYClientUpdateObservable.ts,https://github.com/dexie/Dexie.js/commit/92542c7e420a126e1a244d2c59482b1fe814dee4,.then((syncer) => syncer?.unsentFrom || 1);,liveQuery(async () => {
