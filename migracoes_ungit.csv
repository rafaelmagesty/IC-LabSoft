repo,commit_hash,author,date,message,file_path,commit_url,removed_lines,added_lines
https://github.com/FredrikNoren/ungit,3785cb9017dc6ac54eaf0019dfc7c1fc7e39a0df,codingtwinky,2015-12-26 13:00:03-08:00,"Using promisified async with a custom isFileExists func

Reluctantly...",source\git-promise.js,https://github.com/FredrikNoren/ungit/commit/3785cb9017dc6ac54eaf0019dfc7c1fc7e39a0df,"-    .then(function() { return true; })
-      return fsIsFileExists(file).then(function(isExist) {
-      return fsIsFileExists(HEADFile).then(function(isExist) {",+var fs = require('./utils/fs-async');
https://github.com/FredrikNoren/ungit,ec27e29e46c167e92857dbc480a5f18a79a23df9,codingtwinky,2016-06-01 13:01:55-07:00,"Removing ""function""",source\git-promise.js,https://github.com/FredrikNoren/ungit/commit/ec27e29e46c167e92857dbc480a5f18a79a23df9,"-      .then(function(status) {
-        }).then(function(result) {
-        }).then(function() {
-              .then(function(commitMessage) {
-  }).then(function(result) {
-    .then(function(text) {
-    return fs.isExists(path.join(repoPath, file)).then(function(isExist) {
-  })).then(function() {
-    }).then(function(result) {
-    }).then(function() {
-    .then(function(revParse) {
-    }).then(function(status) {
-          .then(function(isExist) {
-    .then(function() {
-    .then(function(status){
-  })).then(function() {
-  }).then(function(status) {
-      .then(function() {
-      }).then(function() {
-  }).then(function() {","+var gitQueue = async.queue((args, callback) => {"
https://github.com/FredrikNoren/ungit,867614530391d6a0a45f92e708f116f963064064,codingtwinky,2016-06-10 23:25:46-07:00,initial es6ifying git-api.js,source\git-api.js,https://github.com/FredrikNoren/ungit/commit/867614530391d6a0a45f92e708f116f963064064,"-    task = task.then(gitParser.parseGitLog).catch(function(err) {
-    var task = fs.isExists(filename).then(function(exists) {",+const fs = require('./utils/fs-async');
https://github.com/FredrikNoren/ungit,0ddfa829beda58db8bba34f41330a6073ca61237,codingtwinky,2017-04-15 12:15:09-07:00,remove async from grunt and throttle parallelization,Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/0ddfa829beda58db8bba34f41330a6073ca61237,-          .then(function() {,"+var fs = require('./source/utils/fs-async');
+                'async',
+    }).then(this.async());"
https://github.com/FredrikNoren/ungit,7256abcdacbc589225d503226c82be5e9430ea13,codingtwinky,2017-04-17 19:00:23-07:00,Register nm clicktest job,Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/7256abcdacbc589225d503226c82be5e9430ea13,-    getClickTestFiles().then(function(clickTestFiles) {,+    var done = this.async();
https://github.com/FredrikNoren/ungit,2f568da600db32189a7e0eafdd17071bccb07919,codingtwinky,2017-08-18 14:25:24-07:00,es6 grunt file,Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/2f568da600db32189a7e0eafdd17071bccb07919,"-      .then(function(files) {
-      }).then(function(tests) {
-          }).then(function() {
-      }).then(function(results) {
-      Bluebird.all(bumps).then(function() {
-      }).then(function() { done(); }).catch(done);","+const fs = require('./source/utils/fs-async');
+    const done = this.async();
+    const done = this.async();
+    const done = this.async();
+    const done = this.async();"
https://github.com/FredrikNoren/ungit,5e92c6b553c393183de0e1a4a8cf862d38a7e3bc,codingtwinky,2017-09-01 16:29:32-07:00,es6ify,test\spec.cache.js,https://github.com/FredrikNoren/ungit/commit/5e92c6b553c393183de0e1a4a8cf862d38a7e3bc,"-      .then(function(val) { expect(val).to.be(0); })
-      .then(function() { return cache.resolveFunc(key); })
-      .then(function(val) { expect(val).to.be(0); })
-      .then(done)
-      .then(function() { done(""should have thrown exception!""); })
-      .then(function(val) { expect(val).to.be(0); })
-      .then(function() {
-      }).then(function(val) { expect(val).to.be(1); })
-      .then(done)
-      .then(function(val) { expect(val).to.be(0); })
-      .then(function() { return cache.resolveFunc(key1); })
-      .then(function(val) { expect(val).to.be(0); })
-      .then(function() { return cache.resolveFunc(key2); })
-      .then(function(val) { expect(val).to.be(1); })
-      .then(function() {
-      }).then(function(val) { expect(val).to.be(2); })
-      .then(function() { return cache.resolveFunc(key2); })
-      .then(function(val) { expect(val).to.be(1); })
-      .then(done)
-      .then(function(val) { expect(val).to.be(0); })
-      .then(function() {
-      }).then(function() {
-      }).then(function(val) { expect(val).to.be(0); })
-      .then(function() {
-      }).then(function() {
-      }).then(function(val) { expect(val).to.be(1); })
-      .then(function() {
-      }).then(function() {
-      }).then(function(val) { expect(val).to.be(1); })
-      .then(done)",+const async = require('async');
https://github.com/FredrikNoren/ungit,4e267627d3d6805632f38de7d1466df065033141,Jan Pilzer,2020-01-30 20:19:48-08:00,Remove dependency on npm,Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/4e267627d3d6805632f38de7d1466df065033141,"-      Bluebird.all(bumps).then(() => {
-      }).then(() => { done(); }).catch(done);",+const fs = require('./source/utils/fs-async');
https://github.com/FredrikNoren/ungit,9cc5e355e8559e1841ab94722567193def1faf78,campersau,2020-05-07 19:42:00+02:00,"Remove bluebird dependency (#1350)

* remove bluebird

* Update source/server.js

Co-authored-by: Jan Pilzer <jan.pilzer@gmx.de>

* use Object.values

* update changelog

Co-authored-by: Jan Pilzer <jan.pilzer@gmx.de>",Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/9cc5e355e8559e1841ab94722567193def1faf78,"-    }).then(this.async());
-    Bluebird.all(bumps).then(() => {
-    }).then(() => { done(); }).catch(done);",+    })).then(this.async());
https://github.com/FredrikNoren/ungit,70eb8246421658358d3ef08cfbe6a1974bd9b3b9,Wout Mertens,2020-05-09 09:11:55+02:00,prettier,Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/70eb8246421658358d3ef08cfbe6a1974bd9b3b9,"-      return new Promise((resolve, reject) => {
-    })).then(this.async());
-      }).then((tests) => {
-          return new Promise((resolve, reject) => {
-          }).then(() => {
-      }).then((results) => {
-      .then(() => fs.promises.writeFile('package.json', `${JSON.stringify(tempPackageJson, null, 2)}\n`))
-      .then(() => grunt.log.writeln('Dependencies bumped, run npm install to install latest versions.'))
-      .then(() => { done(); }).catch(done);
-    electronPackager(this.options()).then(() => { done(); }, done);","+    ).then(this.async());
+      const done = this.async();
+      const done = this.async();"
https://github.com/FredrikNoren/ungit,2d4286744176100ed07cf99b45393c7516b1c225,Jan Pilzer,2020-05-16 13:39:58-07:00,"Switch from JSHint to ESLint (#1360)

* Remove JSHint

* Add ESLint

* Fix ESLint issues

* Check formatting with ESLint

* Reduce unused vars

* Filter component folders on browserify

* Fix ESLint on format

* Update contributing docs for linting

* Enable prefer-const

* Enable array-callback-return

* Filter components for less and browserify",Gruntfile.js,https://github.com/FredrikNoren/ungit/commit/2d4286744176100ed07cf99b45393c7516b1c225,"-        return new Promise((resolve, reject) => {
-    ).then(this.async());",+    const done = this.async();
https://github.com/FredrikNoren/ungit,690fb4831340120e8fa37420e1c46c1fd4155843,Jung (JK) Kim,2021-11-02 21:28:19-07:00,Add logs and hopefully spec.discard is fixed,clicktests\environment.js,https://github.com/FredrikNoren/ungit/commit/690fb4831340120e8fa37420e1c46c1fd4155843,-    return await this.waitForElementVisible(selector).then((elementHandle) =>,"+    const elementHandle = await this.waitForElementVisible(selector);
+      await elementHandle.click({ clickCount: clickCount });"
https://github.com/FredrikNoren/ungit,65aaf4f34603b183bf68cb3e988418838f16c258,Jung (JK) Kim,2021-12-13 20:04:43-08:00,Simplified port finder,clicktests\environment.js,https://github.com/FredrikNoren/ungit/commit/65aaf4f34603b183bf68cb3e988418838f16c258,"-    return new Promise((resolve, reject) => {
-        this.getPort().then(resolve);","+  async startServer() {
+    this.port = await portfinder.getPortPromise({ port: portrange });"
https://github.com/FredrikNoren/ungit,c619bc78c271197683d22bf25d0351650d44d108,Jung (JK) Kim,2021-12-14 21:28:26-08:00,Bump up unittest timeout,test\common-es6.js,https://github.com/FredrikNoren/ungit/commit/c619bc78c271197683d22bf25d0351650d44d108,"-  return this.post(req, '/testing/createtempdir', config.path).then((res) => {
-    return this.post(req, '/init', { path: res.path, bare: !!config.bare }).then(() => res.path);","+exports.initRepo = async (req, config) => {
+  const res = await this.post(req, '/testing/createtempdir', config.path);"
https://github.com/FredrikNoren/ungit,ea0975ce90048c257b2a6a4a99cd92ab3e4d73fe,jung-kim,2021-12-21 20:53:48-08:00,"Apply suggestions from code review

Co-authored-by: campersau <buchholz.bastian@googlemail.com>",test\common-es6.js,https://github.com/FredrikNoren/ungit/commit/ea0975ce90048c257b2a6a4a99cd92ab3e4d73fe,"-  return this.post(req, '/init', { path: res.path, bare: !!config.bare }).then(() => res.path);","+  await this.post(req, '/init', { path: res.path, bare: !!config.bare });"
https://github.com/FredrikNoren/ungit,9dac1120d45fda2498324d4f80a36a13bed6dc8c,Jung (JK) Kim,2022-01-11 22:01:41-08:00,experiment,components\graph\graph.js,https://github.com/FredrikNoren/ungit/commit/9dac1120d45fda2498324d4f80a36a13bed6dc8c,"-      .then((log) => {
-      .then((nodes) =>
-      .then((nodes) => {
-      .then((res) => {","+  async loadNodesFromApi() {
+      const log = await this.server.getPromise('/gitlog', { path: this.repoPath(), limit: this.limit(), skip: this.skip() });
+  async updateBranches() {
+    const checkout = await this.server.getPromise('/checkout', { path: this.repoPath() });"
https://github.com/FredrikNoren/ungit,9dac1120d45fda2498324d4f80a36a13bed6dc8c,Jung (JK) Kim,2022-01-11 22:01:41-08:00,experiment,components\staging\staging.js,https://github.com/FredrikNoren/ungit/commit/9dac1120d45fda2498324d4f80a36a13bed6dc8c,"-        .then((log) => {
-        .then((status) => {","+  async refreshContent() {
+      const log = await headPromise;
+      const status = await statusPromise;"
https://github.com/FredrikNoren/ungit,9dac1120d45fda2498324d4f80a36a13bed6dc8c,Jung (JK) Kim,2022-01-11 22:01:41-08:00,experiment,components\stash\stash.js,https://github.com/FredrikNoren/ungit/commit/9dac1120d45fda2498324d4f80a36a13bed6dc8c,-      .then((stashes) => {,"+  async refresh() {
+      const stashes = await this.server.getPromise('/stashes', { path: this.repoPath() });"
https://github.com/FredrikNoren/ungit,a1aa89550045610bcf34abd8916f852582871ce7,Jung (JK) Kim,2022-01-16 15:18:43-08:00,Change on program events to asyncs awaits,components\branches\branches.js,https://github.com/FredrikNoren/ungit/commit/a1aa89550045610bcf34abd8916f852582871ce7,"-      .then((branches) =>
-      .then((refs) => {","+  async onProgramEvent(event) {
+      await this.updateRefs();
+  async updateRefs(forceRemoteFetch) {
+      (await branchesProm).forEach(b => {
+      const refs = await refsProm"
https://github.com/FredrikNoren/ungit,a1aa89550045610bcf34abd8916f852582871ce7,Jung (JK) Kim,2022-01-16 15:18:43-08:00,Change on program events to asyncs awaits,components\remotes\remotes.js,https://github.com/FredrikNoren/ungit/commit/a1aa89550045610bcf34abd8916f852582871ce7,-      .then((result) => {,"+  async onProgramEvent(event) {
+      await this.fetch({ tags: true });
+      await this.fetch({ tags: true });
+  async fetch(options) {
+        programEvents.dispatch({ event: 'remote-tags-update', tags: await tagPromise });"
https://github.com/FredrikNoren/ungit,a1aa89550045610bcf34abd8916f852582871ce7,Jung (JK) Kim,2022-01-16 15:18:43-08:00,Change on program events to asyncs awaits,components\submodules\submodules.js,https://github.com/FredrikNoren/ungit/commit/a1aa89550045610bcf34abd8916f852582871ce7,-      .then((submodules) => {,"+  async onProgramEvent(event) {
+    if (event.event == 'submodule-fetch') await this.fetchSubmodules();
+  async fetchSubmodules() {
+    const submodules = await this.server.getPromise('/submodules', { path: this.repoPath() });"
https://github.com/FredrikNoren/ungit,a03e10778ccc9e3a85bc67b5c696cf4399ccfdd2,Jung (JK) Kim,2022-01-20 20:14:23-08:00,Fix to use ComponentRoot,components\path\path.js,https://github.com/FredrikNoren/ungit/commit/a03e10778ccc9e3a85bc67b5c696cf4399ccfdd2,-      .then((status) => {,"+  async updateStatus() {
+    const status = await this.server.getPromise('/quickstatus', { path: this.repoPath() });"
https://github.com/FredrikNoren/ungit,6aff6dccc4f15a66f22fd44415d57c8e32eebf39,Wout Mertens,2022-01-25 09:01:58+01:00,"Node watch (#1465)

* use node-watch instead of fs.watch

This providers recursive watching on Linux

* watch: Make watched result paths relative

node-watch fully resolves the events, unlike fs.watch

* remove detectReActivity workaround

No longer needed

* watchers: move to own class, split events

- split watching into git repo and workdir
- use `skip` to only watch desired directories

* watcher: parse .gitignore on update

* watcher: ignore changes to watched root

Co-authored-by: campersau <buchholz.bastian@googlemail.com>

* lint++

* ui: handle change events more accurately

* lint++

* watch: limit skip to node_modules

Co-authored-by: campersau <buchholz.bastian@googlemail.com>",source\git-api.js,https://github.com/FredrikNoren/ungit/commit/6aff6dccc4f15a66f22fd44415d57c8e32eebf39,"-          .then((ignoreContent) => (socket.ignore = ignore().add(ignoreContent.toString())))
-          .then(() => {
-          .then(() => {
-      .then(() => {","+      socket.on('watch', async (data) => {
+        const watcher = await watchRepo(socket.watcherPath);
+    async watchItem(name, item, options = {}) {
+      if ((await fs.access(item).catch(() => false)) === false) {
+  const readIgnore = async (pathToWatch) => {
+    const ignoreContent = await fs.readFile(path.join(pathToWatch, '.gitignore')).catch(() => null);
+  const watchRepo = async (pathToWatch) => {
+    if ((await fs.access(repoPath).catch(() => false)) === undefined) {
+      let gitIgnore = await readIgnore(pathToWatch);
+      await watcher.addWorkdir(pathToWatch, {
+    await watcher.addGit(path.join(repoPath, 'refs'), {
+    await watcher.addGit(path.join(repoPath, 'HEAD'));
+    await watcher.addGit(path.join(repoPath, 'index'));"
https://github.com/FredrikNoren/ungit,13c7db3297dde5ce3ecf640b87f7d5399f6f0c5f,Jung (JK) Kim,2022-01-27 22:27:39-08:00,new modal,components\remotes\remotes.js,https://github.com/FredrikNoren/ungit/commit/13c7db3297dde5ce3ecf640b87f7d5399f6f0c5f,-            .then(() => {,"+      await this.server.postPromise(`/remotes/${encodeURIComponent(event.modal.name())}`, {
+      await this.updateRemotes();"
https://github.com/FredrikNoren/ungit,2a3c7e05b745e31c2a017784f25715f059c9de38,Jung (JK) Kim,2022-01-28 19:34:35-08:00,Better build and more modals,components\submodules\submodules.js,https://github.com/FredrikNoren/ungit/commit/2a3c7e05b745e31c2a017784f25715f059c9de38,-          .then(() => {,"+      await this.fetchSubmodules();
+      await this.server.delPromise('/submodules', {"
https://github.com/FredrikNoren/ungit,b8f05ebfa095cbfbcbb3acb35010104351bc851e,Jung (JK) Kim,2022-02-13 14:00:14-08:00,Update to individual throttling at components pt2,components\submodules\submodules.js,https://github.com/FredrikNoren/ungit/commit/b8f05ebfa095cbfbcbb3acb35010104351bc851e,-    this.fetchSubmodules().then((submoduleViewModel) => {,+  async _fetchSubmodules() {
https://github.com/FredrikNoren/ungit,e74101d33b2aba4e686a6cf4afe79d2cedddb9f3,Jung (JK) Kim,2022-02-17 23:59:31-08:00,Proper close,components\graph\git-graph-actions.js,https://github.com/FredrikNoren/ungit/commit/e74101d33b2aba4e686a6cf4afe79d2cedddb9f3,"-            .then(() => {
-          if (isYes) context.remove().then(resolve).catch(reject);","+        closeFunc: async (isYes) => {
+            await this.server
+        closeFunc: async (isYes) => {
+            await context.remove().then(resolve).catch(reject);"
https://github.com/FredrikNoren/ungit,4bf9ddff2d88b2764bee4e00e301dc86d15451d3,Jung (JK) Kim,2022-02-20 12:31:57-08:00,Lint...,clicktests\environment.js,https://github.com/FredrikNoren/ungit/commit/4bf9ddff2d88b2764bee4e00e301dc86d15451d3,"-      await new Promise(resolve => setTimeout(resolve, 1000));","+      await new Promise((resolve) => setTimeout(resolve, 1000));"
https://github.com/FredrikNoren/ungit,5288b0e1d3c6c30e1b65da3b8bed5d9c69698c74,campersau,2022-09-08 12:02:07+02:00,specify encoding when reading text files,source\git-api.js,https://github.com/FredrikNoren/ungit/commit/5288b0e1d3c6c30e1b65da3b8bed5d9c69698c74,-      .then((ignoreContent) => res.status(200).json({ content: ignoreContent.toString() })),+    const ignoreContent = await fs
https://github.com/FredrikNoren/ungit,b2c1a04132d81f090a9968f566ff9c1c6a86b8fb,Yoann Lecuyer,2024-08-21 19:29:51+02:00,"Better: change watcher to properly filter ignored directories (#1597)

* remove node-watch

* add chokidar

* change

* lint

* fix ref ignore function

* lint",source\git-api.js,https://github.com/FredrikNoren/ungit/commit/b2c1a04132d81f090a9968f566ff9c1c6a86b8fb,-            readIgnore(pathToWatch).then(,"+    async watchItem(name, item, filter) {
+      await watcher.addWorkdir(pathToWatch, (watch_path) => {
+    await watcher.addGit(path.join(repoPath, 'refs'), (watch_path) => {"
